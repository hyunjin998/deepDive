// p.148

/*
- 객체 타입 (object/reference type) : 변경 가능한 값 (mutable value)

원시 값을 할당한 변수는 원시 값 자체를 값으로 갖지만
참조 값은 생성된 객체가 저장된 메모리 공간의 주소, 그 자체임


- 값에 의한 전달 (pass by value) : 원시 값을 갖는 변수를 다른 변수에 할당하면 원본의 원시 값이 복사되어 전달됨
- 참조에 의한 전달 (pass by reference) : 객체를 가리키는 변수를 다른 변수에 할당하면 원본의 참조 값이 복사되어 전달

원시 값은 변경 불가능한 값이므로 원시 값을 갖는 변수의 값을 변경하려면 재할당 외에는 방법이 없지만
객체는 재할당 없이 프로퍼티를 동적으로 추가/갱신/삭제할 수 있음


객체를 변경할 때마다 원시 값처럼 이전 값을 복사해서 새롭게 생성한다면 명확성과 신뢰성이 확보되겠지만
객체는 크기가 매우 클 수도 있고, 원시 값처럼 크기가 일정하지 않으며, 프로퍼티 값이 객체일 수 있기 때뭄ㄴ에
복사해서 생성하는 비용이 많이 들어, 메모리의 효율적 소비가 어렵고 성능이 나빠짐
=> 메모리를 효율적으로 사용하여 객체를 복사해 생성하는 비용을 절약해 성능을 향상시키기 위해 객체는 변경 가능한 값으로 설계됨

부작용 : 여러 개의 식별자가 하나의 객체를 공유할 수 있음
*/

var person = {
	name: 'Lee'
};

// 프로퍼티 값 갱신
person.name = 'Kim';

// 프로퍼티 동적 생성
person.address = 'Seoul';

console.log(person);