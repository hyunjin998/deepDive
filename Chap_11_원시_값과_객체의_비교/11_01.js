// p.138

/*
- 원시 타입 (primitive type) : 변경 불가능한 값 (immutable value)
=> 읽기 전용 값 => 불변성(immutability) => 데이터의 신뢰성 보장
만약 재할당 이외에 원시 값인 변수 값을 변경할 수 있다면, 상태 변경을 추적하기 어려워짐

변수 : 하나의 값을 저장하기 위해 확보된 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름
값 : 변수에 저장된 데이터로서 표현식이 평가되어 생성된 결과
=> 변경 불가능하다는 것은 변수가 아니라 값에 대한 진술
=> 원시 값은 변경 불가능하다 == 원시 값 자체를 변경할 수 없다 != 변수 값을 변경할 수 없다
변수는 언제든지 재할당을 통해 변수 값을 변경할 수 있음


원시 값을 할당한 변수에 새로운 원시 값을 재할당하면 메모리 공간에 저장돼 있는 재할당 이전의 원시 값을 변경하는 것이 아니라
새로운 메모리 공간을 확보하고 재할당한 원시 값을 저장한 후, 변수는 새롭게 재할당한 원시 값을 가리킴
이때 변수가 참조하던 메모리 공간의 주소가 바뀜
*/


// const 키워드를 사용해 선언한 변수는 재할당이 금지됨
const o = {};

// const 키워드를 사용해 선언한 변수에 할당한 원시 값(상수)은 변경할 수 없지만
// const 키워드를 사용해 선언한 변수에 할당한 객체는 변경할 수 있음
o.a = 1;
console.log(o);